>>> from should_dsl import *
>>> import re

>>> 'Hello World' |should| be_like(r'Hello W.+')

>>> '123 is a number' |should| be_like(r'^[12]+ is a number')
Traceback (most recent call last):
    ...
ShouldNotSatisfied: '123 is a number' is not like '^[12]+ is a number'

>>> 'Hello\nWorld' |should| be_like(r'Hello.+', re.DOTALL)

>>> 'Hello\nWorld' |should| be_like(r'hello.+', re.DOTALL)
Traceback (most recent call last):
    ...
ShouldNotSatisfied: 'Hello\nWorld' is not like 'hello.+' with given flags

>>> 'Hello\nWorld' |should_not| be_like(r'hello.+', re.DOTALL + re.IGNORECASE)
Traceback (most recent call last):
    ...
ShouldNotSatisfied: 'Hello\nWorld' is like 'hello.+' with given flags



>>> 'Hello\nWorld' |should| be_like(r'Hello.+').dotall()

>>> 'Hello\nWorld' |should| be_like(r'hello.+').dotall().ignore_case()

>>> 'Hello\nWorld' |should| be_like(r'hello.+').dotall().ignorecase()

>>> 'Hello\nWorld' |should| be_like(r'hello.+').ignore_case()
Traceback (most recent call last):
    ...
ShouldNotSatisfied: 'Hello\nWorld' is not like 'hello.+' with IGNORECASE flags

>>> 'Hello\nWorld' |should_not| be_like(r'hel.+').ignore_case().dotall()
Traceback (most recent call last):
    ...
ShouldNotSatisfied: 'Hello\nWorld' is like 'hel.+' with IGNORECASE and DOTALL flags

